{% extends 'layout.njk' %}
<style>
    /* Estilos generales para las tarjetas y botones */
    .card-container{
        width: 100% !important;
    }
    .ver-mas-button {
        background-color: #007bff;
        color: #fff;
        border: none;
        padding: 8px 16px;
        border-radius: 5px;
        cursor: pointer;
    }
    
    .ver-menos-button {
        background-color: #dc3545;
        color: #fff;
        border: none;
        padding: 8px 16px;
        border-radius: 5px;
        cursor: pointer;
    }
    
    .hidden {
        display: none;
    }
    .form-group{
        padding: 10px;
    }
    
    
    /* Estilos específicos para cada sección */
    /* Aquí puedes agregar estilos únicos para cada categoría si es necesario */
    
    /* Asegura que las tarjetas sean responsivas */
    @media (max-width: 768px) {
        .card {
            width: calc(50% - 20px);
        }
    }
    
    @media (max-width: 576px) {
        .card {
            width: calc(100% - 20px);
        }
    }
</style>
<script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
<link rel="stylesheet" href="https://cdn.datatables.net/1.11.8/css/jquery.dataTables.min.css">
<!-- Agrega DataTables.net CSS -->
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.11.8/css/jquery.dataTables.min.css">

<!-- Agrega DataTables.net JavaScript -->
<script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.11.8/js/jquery.dataTables.min.js"></script>


<!-- Agrega jQuery (es necesario para DataTables) -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<!-- Agrega el script de DataTables -->
<script src="https://cdn.datatables.net/1.11.8/js/jquery.dataTables.min.js"></script>
{% block body %}
<div class="container text-center">
    <form id="data-form">
        <div class="form-group">
            <label for="start-date">Fecha de inicio:</label>
            <input type="date" class="form-control" id="start-date" name="start-date" value="{{ now }}">
        </div>
        
        <div class="form-group">
            <label for "end-date">Fecha final:</label>
            <input type="date" class="form-control" id="end-date" name="end-date" value="{{ now }}">
        </div>
        
        <button type="button" class="btn btn-primary" id="search">Buscar Datos</button>
    </form>
    <canvas id="chart" style="max-width: 960px; margin: 0 auto;"></canvas>
    <br>
    
</div>
<div class="container">
    <table id="user-table" class="table table-striped table-bordered" style="width:700px">
        <thead>
            <tr>
                <th>Nombre</th>
                <th>Fecha de Ingreso</th>
            </tr>
        </thead>
        <tbody>
            
            <!-- Agrega más filas con datos de usuarios y fechas de ingreso según sea necesario -->
        </tbody>
    </table>
    
</div>
<!-- Agrega el script de Bootstrap desde el CDN al final del documento -->
<!-- Latest compiled and minified CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">

<!-- Optional theme -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap-theme.min.css" integrity="sha384-rHyoN1iRsVXV4nD0JutlnGaslCJuC7uwjduW9SVrLvRYooPp2bWYgmgJQIXwl/Sp" crossorigin="anonymous">

<!-- Latest compiled and minified JavaScript -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"> </script>

<script src="https://code.jquery.com/jquery-3.7.0.js"></script>
<script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.13.6/js/dataTables.jqueryui.min.js"></script>
<script src="https://cdn.datatables.net/scroller/2.2.0/js/dataTables.scroller.min.js"></script>

<script>
    function getFirstDayOfWeek() {
        const today = new Date();
        const dayOfWeek = today.getDay(); // 0 para domingo, 1 para lunes, 2 para martes, etc.
        const daysUntilMonday = (dayOfWeek === 0) ? 6 : (dayOfWeek - 1); // Restamos un día si es domingo, de lo contrario, obtenemos el número de días hasta el lunes.
        const firstDay = new Date(today);
        firstDay.setDate(today.getDate() - daysUntilMonday); // Restamos los días hasta el lunes para obtener el primer día de la semana.
        return firstDay;
    }
    
    function fetchDataAndPopulateTable(dataTable) {
        let url2=null;
        let startDate2=null;
        let endDate2 = null;
        if (document.getElementById("start-date").value === '') {
            startDate2 = document.getElementById("start-date").value === '' ? getFirstDayOfWeek() : new Date(document.getElementById("start-date").value);
            endDate2 = document.getElementById("end-date").value == '' ? (new Date()) : document.getElementById("end-date").value;
            startDate2 = startDate2.toISOString().split('T')[0]
            endDate2 = endDate2.toISOString().split('T')[0]
            console.log(startDate2)
            
            console.log(endDate2)

            
            url2 = `http://172.19.20.140:3000/reports/getAccessData?start=${startDate2}&end=${endDate2}`
        } else {
            startDate2 = document.getElementById("start-date").value;
            endDate2 = document.getElementById("end-date").value;
            console.log(startDate2)
            console.log(endDate2)
            url2 = `http://172.19.20.140:3000/reports/getAccessData?start=${startDate2}&end=${endDate2}`
        }
        const url =`/reports/getAccessLogs?start=${startDate2}&end=${endDate2}`;
        
        // Crea una nueva instancia de XMLHttpRequest
        const xhr = new XMLHttpRequest();
        
        // Configura la solicitud
        xhr.open('GET', url, true);
        
        // Maneja la respuesta de la solicitud
        xhr.onload = function() {
            if (xhr.status >= 200 && xhr.status < 300) {
                // La solicitud se ha completado correctamente
                const data = JSON.parse(xhr.responseText);
                console.log(data)
                console.log('este fueron los logs')
                // Limpia la tabla DataTables antes de agregar nuevos datos
                dataTable.clear().draw();
                
                // Agrega los datos a la tabla
                data.forEach(function(item) {
                    // Agrega una fila con los datos del usuario y la fecha de ingreso
                    dataTable.row.add([item.name, item.timestamp]).draw();
                });
            } else {
                // La solicitud ha fallado
                console.error('Error al cargar datos desde la API:', xhr.status, xhr.statusText);
            }
        };
        
        // Gestionar errores de red
        xhr.onerror = function(err) {
            console.error('Error de red al cargar datos desde la API');
            console.log(err)
        };
        
        // Enviar la solicitud
        xhr.send();
    }
    
    document.addEventListener('DOMContentLoaded', function() {
        const form = document.getElementById('data-form');
        const chartContainer = document.getElementById('chart-container');
        const searchButton = document.getElementById('search');
        let url = null;
        searchButton.addEventListener('click', function() {
            chart=document.getElementById("chart")
            chart.innerHTML='';            
            console.log(document.getElementById("start-date").value)
            console.log(document.getElementById("end-date").value)
            console.log('####')
            if (document.getElementById("start-date").value === '') {
                const startDate = document.getElementById("start-date").value === '' ? getFirstDayOfWeek() : new Date(document.getElementById("start-date").value);
                const endDate = document.getElementById("end-date").value == '' ? (new Date()) : document.getElementById("end-date").value;
                
                url = `http://172.19.20.140:3000/reports/getAccessData?start=${startDate.toISOString().split('T')[0]}&end=${endDate.toISOString().split('T')[0]}`
            } else {
                const startDate = document.getElementById("start-date").value;
                const endDate = document.getElementById("end-date").value;
                url = `http://172.19.20.140:3000/reports/getAccessData?start=${startDate}&end=${endDate}`
            }
            
            console.log(url)
            
            // Crear una nueva instancia de XMLHttpRequest
            const xhr = new XMLHttpRequest();
            
            // Configurar la solicitud
            xhr.open('GET', url, true);
            
            // Configurar la respuesta de la solicitud
            xhr.onload = function() {
                if (xhr.status >= 200 && xhr.status < 300) {
                    // La solicitud se ha completado correctamente
                    const data = JSON.parse(xhr.responseText);
                    console.log(data)
                    var options = {
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                stacked: true,
                                grid: {
                                    display: true,
                                    color: "rgba(255,99,132,0.2)"
                                }
                            },
                            x: {
                                grid: {
                                    display: false
                                }
                            }
                        }
                    };
                    var dataChart = {
                        labels: data.labels,
                        datasets: [{
                            label: "Registro de acceso",
                            backgroundColor: "rgba(255,99,132,0.2)",
                            borderColor: "rgba(255,99,132,1)",
                            borderWidth: 6,
                            hoverBackgroundColor: "rgba(255,99,132,0.4)",
                            hoverBorderColor: "rgba(255,99,132,1)",
                            data: data.data,
                        }]
                    };
                    
                    console.log(data.values)
                    console.log(data.labels)
                    
                    // Aquí puedes usar los datos recibidos para generar una gráfica con Chart.js
                    const chartData = {
                        type: 'line',
                        options: options,
                        data: dataChart
                    };
                    
                    // Aquí se crea la gráfica (debes incluir la lógica de Chart.js aquí)
                    const myChart = new Chart("chart", chartData);
                } else {
                    // La solicitud ha fallado
                    console.error('Error al cargar datos desde la API:', xhr.status, xhr.statusText);
                }
            };
            
            // Gestionar errores de red
            xhr.onerror = function() {
                console.error('Error de red al cargar datos desde la API');
            };
            
            // Enviar la solicitud
            xhr.send();
            
            // Crear una instancia de DataTables
            const dataTable = $('#user-table').DataTable({
                // Configuración de DataTables (si es necesario)
                scrollY: 400, // Altura máxima de la tabla
                paging: false, // Desactiva la paginación
                scrollCollapse: true,
                searching: false // Desactiva la búsqueda
            });
            
            // Llena la tabla con los datos
            fetchDataAndPopulateTable(dataTable);
        });
        
        // Simular un clic en el botón de búsqueda cuando se carga la página
        searchButton.click();
    })
</script>


{% endblock %}
