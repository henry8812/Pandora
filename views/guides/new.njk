{% extends 'layout_articles.njk' %}

{% block body %}

<div id="article-editor">
  <form id="article-form">
    <div class="article-header">
      <label for="document">Documento del manual</label>
      <input type="file" id="document" name="document">
      <button type="button" id="upload">Upload Document</button>
      <input type="text" id="documenturl" name="documenturl" style="display: none;">
      <label for="title">Title</label>
      <input type="text" id="title" name="title">
      <label for="short-description">Short Description</label>
      <textarea id="short-description" name="short-description"></textarea>
      <label for="publico">Público</label>
			<select id="publico" name="publico" multiple>
				<option value="">Seleccionar público</option>
				<option value="3">FRONT</option>
				<option value="5">PREMIUM</option>
				<option value="6">OPERATIVO</option>
        <option value="7">HERRAMIENTAS DE GESTION</option>
        
			</select>
    </div>
    <div class="article-content">
      <label for="content">Content</label>
      <textarea id="content" name="content"></textarea>
    </div>
    <button type="submit" id="publish">Publish</button>
  </form>
</div>

<script src="https://cdn.tiny.cloud/1/ro7zz3s8qd5agecj1yw4flgil4i2wwk0qu7ka7oilyiduxcv/tinymce/5/tinymce.min.js" referrerpolicy="origin"></script>
<script>
  document.addEventListener("DOMContentLoaded", function() {
    tinymce.init({
      selector: '#content',
      plugins: 'advlist autolink lists link image charmap print preview hr anchor pagebreak',
      toolbar_mode: 'floating',
      height: '400',
      content_style: 'body { font-family: Arial,sans-serif; font-size: 14px; }',
    });

    const articleForm = document.querySelector("#article-form");
    const uploadButton = document.querySelector("#upload");

    let guide = null;
    let resource = null;

    uploadButton.addEventListener("click", function() {
      const documentInput = document.querySelector("#document");
      const documentURL = document.querySelector("#documenturl");
      const formData = new FormData();

      if (documentInput.files.length > 0) {
        const file = documentInput.files[0];
        formData.append("file", file);
      }

      fetch("/resources/", {
        method: "POST",
        body: formData
      })
      .then(response => response.json())
      .then(data => {
        resource = data;
        
        
        Swal.fire({
            title: 'Carga Completa',
            text: 'Haz cargado el documento para el manueal exitosamente',
            icon: 'success',
            confirmButtonText: 'OK'
          })
      })
      .catch(error => {
        console.error("Error al cargar el documento:", error);
        Swal.fire({
            title: 'Carga Fallida',
            text: 'Ha ocurrido un error al cargar el documento, intentalo nuevamente, si el error persiste contacta al equipo de soporte',
            icon: 'error',
            confirmButtonText: 'OK'
          })
      });
    });

    articleForm.addEventListener("submit", function(event) {
      event.preventDefault();

      const titleInput = document.querySelector("#title");
      const documentURL = document.querySelector("#documenturl");
      const shortDescriptionInput = document.querySelector("#short-description");
      const contentInput = tinymce.get('content').getContent();
      const publicoInput = document.querySelector("#publico");
			const selectedOptions = Array.from(publicoInput.selectedOptions);
			const selectedValues = selectedOptions.map(option => option.value);

      const guideData = {
        title: titleInput.value,
        resource : resource ? resource.resource : null ,
        shortDescription: shortDescriptionInput.value,
        content: contentInput,
        target_id :  selectedValues || null
      };

      fetch("/guides", {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify(guideData)
      })
      .then(response => response.json())
      .then(data => {
        //console.log(data);
        Swal.fire({
            title: 'Manual creado correctamente',
            text: 'Haz creado un manual de fomra exitosa',
            icon: 'success',
            confirmButtonText: 'OK'
          }).then((result) => {
          /* Read more about isConfirmed, isDenied below */
            location.href = "/guides";
        })
      })
      .catch(error => {
        console.error("Error al publicar el artículo:", error);
      });
    });
  });
</script>
{% endblock %}
